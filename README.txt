Example MySql SCIM Connector
========

This provides a working SCIM connector example where users and groups are kept in an MySql database.
The sample database already has a large set of users, groups and group memberships. The example shows how your connector
can work with an existing user database to only implement a subset of all the UM capabilities that Okta supports.

This connector assumes it is integrated with an App named "onprem_mysql_app" that will have three custom properties:
 * birth_date
 * gender
 * hire_date

There is a separate "mysql-data" directory that ships with the tester that contains data files specific to this example
connector with the expected custom properties, group ids and user ids that are already expected in the database.

Initially this example connector is hard coded to only return a maximum of 2,000 users, but you can edit the MAX_USERS_TO_RETURN
field if you want to return more and more users to test the connector.


Prerequisites
----------
1. Employees Sample Database - https://dev.mysql.com/doc/employee/en/
    Follow the download and installation instructions here: https://dev.mysql.com/doc/employee/en/employees-installation.html
    You will download a compressed database backup along with the required sql files required to load those databases onto your MySql server.

    After you have the database loaded onto your server, run the following command:
    		mysql -t < employees_schema_alter.sql

    We want these changes so that all new employee records added will have their id auto-generated by the MySql server instead of requiring our connector
    to generate the proper unique id during creation. 


Setup
----------
1. locate the /lib/scim-server-sdk jar file from the SDK root directory
2. Install it locally: mvn install:install-file -Dfile=../lib/scim-server-sdk-01.02.03.jar -DgroupId=com.okta.scim.sdk -DartifactId=scim-server-sdk -Dpackaging=jar -Dversion=01.02.03
3. Open src/main/webapp/WEB-INF/dispatcher-servlet.xml
4. Modify the MySql connection string properties (server name, port, etc.) that are part of the MySqlSCIMServiceImpl bean.
5. Build the example: mvn package
6. Take the target/scim-mysql-connector-example-*.war and copy it to your Tomcat directory and run it.
6a. Because of the increased memory requirements of this connector, you may need to increase the Java heap size of your Tomcat server when you start it.
    This is typically done by adding the "-Xmx4096m" (to set the max to 4GB) argument to either your CATALINA_OPTS or JAVA_OPTS environment variable.
7. You can now use the tester to run methods against this example SCIM connector.


More Docs
----------
See the README.txt under the scim-server-example directory for more information on SSL configuration
